package com.szyperek.lottery.mapper;

import com.szyperek.lottery.dto.request.RegistrationRequest;
import com.szyperek.lottery.dto.response.AppUserResponse;
import com.szyperek.lottery.entity.AppUser;
import com.szyperek.lottery.entity.enums.Role;
import com.szyperek.lottery.service.PasswordService;
import lombok.RequiredArgsConstructor;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

@RequiredArgsConstructor
@Component
public class AppUserMapper {

    private static final Role USER_ROLE = Role.USER;

    private final PasswordEncoder passwordEncoder;

    private final PasswordService passwordService;

    public AppUserResponse toResponse(AppUser appUser) {
        if (appUser == null) {
            return null;
        }

        Long id = appUser.getId();
        String email = appUser.getEmail();
        String name = appUser.getName();

        return new AppUserResponse(id, email, name);
    }

    public AppUser toEntity(RegistrationRequest registrationRequest) {
        if (registrationRequest == null) {
            return null;
        }

        AppUser appUser = new AppUser();

        setAutoGeneratedPassword(appUser);

        appUser.setEmail(registrationRequest.getEmail());
        appUser.setName(registrationRequest.getName());
        appUser.setRole(USER_ROLE);

        return appUser;
    }

    protected void setAutoGeneratedPassword(AppUser appUser) {
        String generatedPassword = passwordService.generatePassword();
        appUser.setPassword(passwordEncoder.encode(generatedPassword));
    }
}
